ifeq ($(KDIR),)
  export KDIR="/lib/modules/$(shell uname -r)/build"
endif
ifeq ($(module_DATA),)
  echo "module_DATA not set, cannot proceed"
endif
ifeq ($(AM_ABSSRCDIR),)
  echo "AM_ABSSRCDIR not set, cannot proceed"
endif
ifeq ($(AM_CWDCDIR),)
  echo "AM_CWDCDIR not set, cannot proceed"
endif

ifeq ($(ARCH),)
  echo "ARCH not set, setting to default: x86"
  export ARCH=x86
  export CROSS_COMPILE=
endif

obj-m += $(module_DATA)
#MI_OBJS = $(module_DATA)
ccflags-y       = \
  -I$(KDIR)arch/$(ARCH)/include \
  -I$(KDIR)arch/$(ARCH)/uapi/include \
  -I$(KDIR)arch/sh/include \
  -I$(AM_ABSSRCDIR)/3rd_party/i2cdevlib
#  -I$(KDIR)include \
#  -I$(KDIR)arch/arm/mach-sun4i/include \
#  -I$(KDIR)arch/arm/plat-sunxi/include \
#KBUILD_EXTRA_SYMBOLS
#INSTALL_MOD_PATH=$(AM_CWDCDIR)
#INSTALL_MOD_DIR=$(AM_CWDCDIR)

all: modules
modules:
	$(MAKE) -C $(KDIR) M=$(AM_ABSSRCDIR) \
KBUILD_VERBOSE=$(KBUILD_VERBOSE) ARCH=$(ARCH) CROSS_COMPILE=$(CROSS_COMPILE) \
V=$(KBUILD_VERBOSE) modules
#	$(MAKE) -C $(KDIR) M=$(PWD) modules
clean:
	$(MAKE) -C $(KDIR) M=$(AM_ABSSRCDIR) clean
#	$(MAKE) -C $(KDIR) M=$(PWD) clean
